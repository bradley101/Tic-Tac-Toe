<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Game</title>
    
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.1.0/socket.io.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    
    <style>
        table {
            margin: 20px auto;
        }
        table tr td {
            width: 100px;
            height: 100px;
            border: 1px solid black;
        }

    </style>

</head>
<body>
    <h4>Send this link to your friends to invite them<br>
        <a href="https://remote-tic-tac-toe.herokuapp.com/play/<%= room %>">https://remote-tic-tac-toe.herokuapp.com/play/<%= room %></a></h4>
    <div id="turn"></div>
    <table>
        <tr>
            <td>
                
            </td>
            <td>
                
            </td>
            <td></td>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td></td>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td></td>
        </tr>
    </table>

    <div id="scores">

    </div>
    <button>Rematch</button>

    <script>
        let _ = $('table td')
        for (let i = 0; i < _.length; ++i) {
            _[i].dataset.i = `${Math.floor(i/3)}`
            _[i].dataset.j = `${i%3}`
        }
        let socket = io()
        let id = ''
        let roundId = ''
        let callbackJ = ''
        const room = "<%= room %>", name = "<%= name %>";
        const cross_symbol_svg = '<svg id="x" height="100" width="100"><path d="m 10,10 l 80,80 M 90,10 L 10,90" stroke-width="2" stroke="red"/></svg>';
        const circle_symbol_svg = '<svg id="o" height="100" width="100"><circle cx="50" cy="50" r="40" stroke="blue" stroke-width="2" fill="white" /></svg>';
        
        const symbols = {}; symbols['x'] = cross_symbol_svg; symbols['o'] = circle_symbol_svg;

        $('table').css('pointer-events', 'none');

        socket.on('disconnect', reason => console.log(reason))
        socket.on('init_id', data => id = data)
        socket.on('init_scores', initScore)
        socket.on('move', move);
        socket.on('showOppMove', showOppMove);
        socket.on('gameOver', gameOver);
        socket.on('clearBoard', d => {
            let tmp = $('table td')
            for (let ci = 0; ci < 9; ++ci) {
                tmp[ci].innerHTML = ''
            }
        })
        
        socket.emit('init', `{"room": "${room}", "name": "${name}"}`);

        function initScore(data) {
            $('button').css('display', 'none');
            let j = JSON.parse(data);
            roundId = j.id;
            delete j.id
            $('#scores').html('')
            for (key in j) {
                console.log(j[key])
                $('#scores').append('<p><strong>' + j[key][0] + ': </strong>' + `${j[key][1].wins} / ${j[key][1].losses}` + '</p>')    
            }
        }

        function move(data) {
            console.log(data);
            $('table').css('pointer-events', 'auto');
            callbackJ = JSON.parse(data);
        }
        $('td').click({j: callbackJ}, tdClickCallback);
        function tdClickCallback(e) {
            let j = callbackJ;
            let t = e.currentTarget
            $(t).html(symbols[j.symbol]);
            $('table').css('pointer-events', 'none');
            j["move-x"] = t.dataset.i;j["move-y"] = t.dataset.j;
            sendMoveAck(j)
        }

        function showOppMove(data) {
            let j = JSON.parse(data);
            $('table td')[parseInt(j["move-x"]) * 3 + parseInt(j["move-y"])].innerHTML = symbols[j.symbol];
        }

        function sendMoveAck(j) {
            // j["data"] = gatherBoardData();
            j = JSON.stringify(j);
            socket.emit('move_completed', j);
        }

        function gameOver(data) {
            let j = JSON.parse(data)
            
            $('button').css('display', 'block')
            console.log($('button').css('display'))
        }

        // $('button').click(e => {
        //     socket.emit('rematch', '')
        // })
    </script>

</body>
</html>